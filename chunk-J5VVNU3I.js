import{L as s}from"./chunk-WVTPRLOA.js";var t=class e{blogPosts=[{id:"como-manejar-rutas-anidadas-angular",title:"C\xF3mo manejar rutas anidadas en Angular",content:[{title:"\xBFQu\xE9 Son las Rutas Anidadas?",texts:["Las rutas anidadas permiten definir rutas dentro de otras rutas, lo cual es \xFAtil cuando una secci\xF3n de tu aplicaci\xF3n tiene sub-secciones o vistas espec\xEDficas que deben renderizarse dentro de un contenedor o layout com\xFAn.",'Por ejemplo, si ten\xE9s una secci\xF3n de perfil con sub-secciones como "Informaci\xF3n" y "Ajustes", podr\xEDas tener algo as\xED:'],image:{src:"https://i.ibb.co/VDMTmjR/ejemploruta.webp",alt:"Ejemplo de rutas anidadas"}},{texts:["Esto se consigue con rutas anidadas."],subtitle:null,image:null},{title:"Paso 1: Crear un M\xF3dulo de Rutas Standalone para las Rutas Anidadas",texts:['Dado que estamos trabajando con Angular Standalone (sin m\xF3dulos tradicionales), las rutas se configuran dentro de componentes que se exportan directamente como "standalone".']},{subtitle:"1.1. Componente Contenedor",texts:['Primero, vamos a crear un componente contenedor que actuar\xE1 como el "layout" o contenedor para las rutas anidadas.',"1. Crea un componente contenedor (por ejemplo, PerfilComponent):"],image:{src:"https://i.ibb.co/ZTj2L5W/terminal1.webp",alt:"Ejemplo de PerfilComponent"}},{texts:["2. Configura el HTML del contenedor. En este componente contenedor, se renderizar\xE1n las rutas hijas (anidadas) dentro de un <router-outlet>:"],image:{src:"https://i.ibb.co/MM8FN2F/perfilcomponent-html.webp",alt:"perfil-component-html"}},{title:"Paso 2: Configuraci\xF3n de las Rutas en el Archivo de Rutas Standalone",texts:["En este paso, vamos a configurar las rutas en el archivo de rutas, pero ya de forma independiente y usando Angular Standalone."]},{subtitle:"2.1. Definir las Rutas Anidadas",texts:["1. Crea los componentes para las sub-rutas:"],image:{src:"https://i.ibb.co/mC3hb7q/TERMINAL2.webp",alt:"componentes informacion y ajustes"}},{texts:["2. Configura las rutas de manera anidada dentro de un archivo de rutas. Vamos a definir las sub-rutas bajo el componente principal PerfilComponent.","En el archivo app.routes.ts:"],image:{src:"https://i.ibb.co/859qyH2/emploapproutes.webp",alt:"ejemplo de app.routes.ts"}},{title:"Paso 3: Importar y Configurar las Rutas en el M\xF3dulo Standalone",texts:["En Angular Standalone, no usamos m\xF3dulos tradicionales, sino que importamos el archivo de rutas directamente en el componente principal."],subtitle:"3.1. Importar el RouterModule"},{texts:["Asegur\xE1te de que el componente ra\xEDz (por ejemplo, AppComponent) importe el RouterModule y configure las rutas:"],image:{src:"https://i.ibb.co/4NGvmdk/App-Componentcon-Router-Module.webp",alt:"ejemplo de app.routes.ts"}},{title:"Paso 4: Lazy Loading de Rutas Anidadas",texts:["En aplicaciones m\xE1s grandes, es recomendable cargar los m\xF3dulos de forma perezosa (lazy loading) para mejorar el rendimiento. Con Angular Standalone, pod\xE9s aplicar lazy loading a las rutas anidadas tambi\xE9n."]},{subtitle:"4.1. Implementaci\xF3n del Lazy Loading",texts:["1. Cre\xE1 un archivo de rutas para las rutas anidadas de PerfilComponent, por ejemplo, perfil.routes.ts.","2. Us\xE1 el siguiente patr\xF3n para implementar lazy loading en las sub-rutas:"],image:{src:"https://i.ibb.co/2N9Mqzz/lazy-loaded-en-subrutas.webp",alt:"lazy-loading en sub-rutas"}},{texts:["3. Luego, actualiz\xE1 la configuraci\xF3n de rutas para que cargue este archivo de rutas anidadas de manera perezosa:"],image:{src:"https://i.ibb.co/7Kp45xP/carga-forma-perezoso.webp",alt:"carga de forma perezosa de rutas"}},{title:"Paso 5: Probar las Rutas Anidadas",subtitle:"Probar en la aplicaci\xF3n:",texts:["Al navegar a /perfil, ver\xE1s el componente PerfilComponent.","Al hacer clic en Informaci\xF3n o Ajustes, las rutas anidadas se cargar\xE1n dentro del <router-outlet>."]},{subtitle:"Comportamiento esperado:",texts:["Cuando naveg\xE1s a /perfil/informacion, se deber\xEDa cargar el componente InformacionComponent dentro del PerfilComponent.","Lo mismo ocurrir\xE1 para /perfil/ajustes."]}]},{id:"mejorando-accesibilidad-proyectos-web",title:"Mejorando la accesibilidad en tus proyectos web",content:[{texts:["Cuando se habla de mejorar la accesibilidad en los proyectos web, para m\xED es clave no verlo como una obligaci\xF3n, sino como una oportunidad de hacer que el sitio llegue a m\xE1s gente. No solo estamos ayudando a las personas con discapacidades, sino que en el fondo, mejoramos la experiencia para todos. Cosas simples como un buen contraste de colores o un dise\xF1o m\xE1s claro terminan beneficiando a un mont\xF3n de usuarios."]},{title:"HTML Sem\xE1ntico",texts:["Primero, lo que trato de hacer siempre es usar un HTML sem\xE1ntico. Es decir, trato de no abusar de <div> o <span> para todo, sino que uso etiquetas que realmente describen el contenido, como <header>, <footer>, <section>, etc. Esto hace que el sitio est\xE9 m\xE1s ordenado y que herramientas como los lectores de pantalla lo entiendan mejor."]},{title:"Contraste de Color y Visibilidad",texts:["Luego, el contraste de los colores. Si no hay buen contraste entre el texto y el fondo, puede ser un dolor de cabeza leer, especialmente para alguien con problemas de visi\xF3n. Por eso, siempre chequeo el contraste con herramientas como el WCAG Contrast Checker, para asegurarme de que sea adecuado. A veces un peque\xF1o ajuste de color cambia todo."]},{title:"Teclas de Acceso R\xE1pido (Shortcuts) y Navegaci\xF3n con el Teclado",texts:["Un tema clave es la navegaci\xF3n con el teclado. No todos usan el rat\xF3n, as\xED que es importante que el sitio sea completamente navegable con las teclas. Adem\xE1s, tener atajos de teclado puede ser muy \xFAtil para moverse r\xE1pido por el sitio."]},{title:"Etiquetas aria y Roles",texts:["Las etiquetas aria son geniales cuando tenemos contenido din\xE1mico, como un men\xFA desplegable o un pop-up. Estas etiquetas permiten que los lectores de pantalla sepan qu\xE9 est\xE1 pasando en la p\xE1gina, lo que facilita mucho la navegaci\xF3n para quienes las usan."]},{title:"Texto Alternativo y Multimedia",texts:["Las im\xE1genes siempre deben tener una descripci\xF3n en el atributo alt, y si hay videos, lo ideal es agregar subt\xEDtulos o transcripciones. Esto no es solo para personas con discapacidades visuales o auditivas, sino tambi\xE9n para quienes no entienden el idioma del sitio o prefieren leer antes que escuchar."]},{title:"Lenguaje Claro y Conciso",texts:["Tratar de usar un lenguaje simple es clave. A veces nos gusta complicar las cosas con jerga o palabras rebuscadas, pero lo mejor es ser claro y directo. Esto ayuda a todo el mundo, pero sobre todo a personas con discapacidades cognitivas o quienes no dominan el idioma del sitio."]},{title:"Formularios Accesibles",texts:["Los formularios son otro tema importante. No basta con hacer que funcionen; deben estar bien estructurados, con etiquetas claras asociadas a los campos y mensajes de error f\xE1ciles de entender. Adem\xE1s, para quienes usan lectores de pantalla, todo debe estar bien marcado para que sea l\xF3gico y f\xE1cil de seguir."]},{title:"Animaciones y Efectos",texts:["Las animaciones est\xE1n buenas, pero hay que tener cuidado con ellas. Algunas personas tienen sensibilidad al movimiento o pueden ser propensas a ataques de epilepsia fotosensible. Por eso, trato de que las animaciones sean suaves o, si es posible, permitir que el usuario las apague si no le gustan."]},{title:"Testeo y Feedback Continuo",texts:["Lo m\xE1s importante: siempre probar todo. A veces uno cree que todo est\xE1 perfecto, pero la mejor forma de saber si realmente es accesible es pidi\xE9ndole feedback a los usuarios reales, especialmente aquellos que dependen de tecnolog\xEDas de asistencia. Adem\xE1s, la accesibilidad no es algo que se hace una sola vez; siempre es bueno revisar y mejorar con el tiempo."]},{title:"Conclusi\xF3n",texts:["Mejorar la accesibilidad no solo es cumplir con una norma, sino que es una forma de hacer que el sitio sea m\xE1s \xFAtil y f\xE1cil de usar para todos. No es tan complicado como parece, y con algunos ajustes simples podemos hacer que la web sea un lugar m\xE1s inclusivo."]}]},{id:"introduccion-typescript",title:"Introducci\xF3n a TypeScript",description:"Gu\xEDa b\xE1sica para empezar con TypeScript.",content:"Ut suscipit eros sed nisl tempus, vitae consectetur risus vehicula. Donec mollis consectetur sapien vel consequat. Integer ut nulla sit amet sapien gravida pretium nec vel justo."}];constructor(){}getPosts(){return this.blogPosts}getPostById(o){return this.blogPosts.find(a=>a.id===o)}static \u0275fac=function(a){return new(a||e)};static \u0275prov=s({token:e,factory:e.\u0275fac,providedIn:"root"})};export{t as a};
